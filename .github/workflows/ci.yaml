name: CI Pipeline

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'k8s/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'k8s/**'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-cov

      - name: Run tests with coverage
        run: |
          pytest --cov=src --cov-report=xml:coverage.xml --cov-report=html:htmlcov

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage.xml
            htmlcov/

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/model-manifest-api:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/model-manifest-api:${{ github.sha }}
          docker tag ${{ secrets.DOCKER_USERNAME }}/model-manifest-api:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/model-manifest-api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/model-manifest-api:latest

  update-k8s-overlays:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Update Kubernetes overlay
        run: |
          sed -i 's|image: .*|image: ${{ secrets.DOCKER_USERNAME }}/model-manifest-api:${{ github.sha }}|' k8s/overlays/production/deployment-patch.yaml
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add k8s/overlays/production/deployment-patch.yaml
          git commit -m "Update Kubernetes overlay with new image tag: ${{ github.sha }}"
          git push origin main